//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `robot.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package agencia.datos;

public class suscripcion implements java.lang.Cloneable,
                                    java.io.Serializable
{
    public int id;

    public IPYPort iport;

    public Escenario esc;

    public suscripcion()
    {
        this.iport = new IPYPort();
        this.esc = new Escenario();
    }

    public suscripcion(int id, IPYPort iport, Escenario esc)
    {
        this.id = id;
        this.iport = iport;
        this.esc = esc;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        suscripcion r = null;
        if(rhs instanceof suscripcion)
        {
            r = (suscripcion)rhs;
        }

        if(r != null)
        {
            if(this.id != r.id)
            {
                return false;
            }
            if(this.iport != r.iport)
            {
                if(this.iport == null || r.iport == null || !this.iport.equals(r.iport))
                {
                    return false;
                }
            }
            if(this.esc != r.esc)
            {
                if(this.esc == null || r.esc == null || !this.esc.equals(r.esc))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::agencia::datos::suscripcion");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, iport);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, esc);
        return h_;
    }

    public suscripcion clone()
    {
        suscripcion c = null;
        try
        {
            c = (suscripcion)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeInt(this.id);
        IPYPort.ice_write(ostr, this.iport);
        Escenario.ice_write(ostr, this.esc);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.id = istr.readInt();
        this.iport = IPYPort.ice_read(istr);
        this.esc = Escenario.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, suscripcion v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public suscripcion ice_read(com.zeroc.Ice.InputStream istr)
    {
        suscripcion v = new suscripcion();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<suscripcion> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, suscripcion v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<suscripcion> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(suscripcion.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final suscripcion _nullMarshalValue = new suscripcion();

    /** @hidden */
    public static final long serialVersionUID = 8770468803377676057L;
}
