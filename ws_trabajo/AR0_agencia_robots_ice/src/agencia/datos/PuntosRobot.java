//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `robot.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package agencia.datos;

public class PuntosRobot implements java.lang.Cloneable,
                                    java.io.Serializable
{
    public Posicion centro;

    public Posicion[] sens;

    public Posicion[] finsens;

    public Posicion[] inter;

    public PuntosRobot()
    {
        this.centro = new Posicion();
    }

    public PuntosRobot(Posicion centro, Posicion[] sens, Posicion[] finsens, Posicion[] inter)
    {
        this.centro = centro;
        this.sens = sens;
        this.finsens = finsens;
        this.inter = inter;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PuntosRobot r = null;
        if(rhs instanceof PuntosRobot)
        {
            r = (PuntosRobot)rhs;
        }

        if(r != null)
        {
            if(this.centro != r.centro)
            {
                if(this.centro == null || r.centro == null || !this.centro.equals(r.centro))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(this.sens, r.sens))
            {
                return false;
            }
            if(!java.util.Arrays.equals(this.finsens, r.finsens))
            {
                return false;
            }
            if(!java.util.Arrays.equals(this.inter, r.inter))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::agencia::datos::PuntosRobot");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, centro);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, sens);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, finsens);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, inter);
        return h_;
    }

    public PuntosRobot clone()
    {
        PuntosRobot c = null;
        try
        {
            c = (PuntosRobot)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        Posicion.ice_write(ostr, this.centro);
        ListaPosicionesHelper.write(ostr, this.sens);
        ListaPosicionesHelper.write(ostr, this.finsens);
        ListaPosicionesHelper.write(ostr, this.inter);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.centro = Posicion.ice_read(istr);
        this.sens = ListaPosicionesHelper.read(istr);
        this.finsens = ListaPosicionesHelper.read(istr);
        this.inter = ListaPosicionesHelper.read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, PuntosRobot v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public PuntosRobot ice_read(com.zeroc.Ice.InputStream istr)
    {
        PuntosRobot v = new PuntosRobot();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<PuntosRobot> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, PuntosRobot v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<PuntosRobot> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(PuntosRobot.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final PuntosRobot _nullMarshalValue = new PuntosRobot();

    /** @hidden */
    public static final long serialVersionUID = 3273540239149084835L;
}
